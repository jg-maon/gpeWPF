<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfApplication1"
                    xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="MenuItemStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    
    
    <DataTemplate x:Key="KeyParameterTabPaneTemplate">
        <DataTemplate.Resources>
            <local:RadToDegreeConverter x:Key="RadToDegreeConverter"/>

            <!--<ContextMenu x:Key="KeySliderMenu" Tag="{Binding}">
                <MenuItem Style="{StaticResource KeyMenuItemExpandAll}" Command="{Binding ExpandAllCommand}" DataContext="{Binding Path=Tag, ElementName=ParameterViewer}"></MenuItem>
                <MenuItem Style="{StaticResource KeyMenuItemCollapseAll}" Command="{Binding CollapseAllCommand}" DataContext="{Binding Path=Tag, ElementName=ParameterViewer}"></MenuItem>
                <MenuItem Header="単位の変更" 
                          Visibility="{Binding CanChangeUnit, Converter={StaticResource bool2VisibilityConverter}}"
                          ItemsSource="{Binding Units}"
                          >
                    <MenuItem.ItemContainerStyle>
                        <Style>
                            <Setter Property="MenuItem.Command" Value="{Binding Path=Tag.ChangeUnitCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
                            <Setter Property="MenuItem.CommandParameter" Value="{Binding}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                
            </ContextMenu>-->
            
            
            <DataTemplate x:Key="KeyStringTemplate">
                <Expander IsExpanded="{Binding IsExpanded, Mode=TwoWay}" Visibility="{Binding IsVisible, Converter={StaticResource bool2VisibilityConverter}}">
                    <Expander.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding DispName}"/>
                            <TextBox Grid.Column="1" TabIndex="{Binding TabIndex}" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Expander.Header>
                    <Grid>

                        <!--<xctk:ColorCanvas />-->
                    </Grid>
                </Expander>
            </DataTemplate>
            <DataTemplate x:Key="KeyValueTemplate">
                <Expander IsExpanded="{Binding IsExpanded, Mode=TwoWay}" Visibility="{Binding IsVisible, Converter={StaticResource bool2VisibilityConverter}}">
                    <Expander.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <!--<ColumnDefinition Width="*"/>-->
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding DispName}"/>
                            <TextBox Grid.Column="1" TabIndex="{Binding TabIndex}" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <!--<Label Grid.Column="2" Content="ColorPicker"></Label>-->
                        </Grid>
                    </Expander.Header>
                    <Grid>

                        <Slider Minimum="{Binding Path=ActiveUnit.Min}"
                                Maximum="{Binding Path=ActiveUnit.Max}"
                                IsSnapToTickEnabled="{Binding Path=ActiveUnit.SnapTpTick}"
                                SmallChange="{Binding Path=ActiveUnit.SmallChange}"
                                TickFrequency="{Binding Path=ActiveUnit.Tick}"
                                
                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <!--<xctk:ColorCanvas />-->
                    </Grid>
                </Expander>
            </DataTemplate>

            <DataTemplate x:Key="KeyBoolTemplate">
                <Grid Margin="25,0,0,0" Visibility="{Binding IsVisible, Converter={StaticResource bool2VisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding DispName}"/>
                    <CheckBox Grid.Column="1" TabIndex="{Binding TabIndex}" IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <!--<xctk:ColorPicker ColorMode="ColorCanvas" ShowAdvancedButton="False" Background="DarkGray" />-->
                </Grid>
            </DataTemplate>


            <DataTemplate x:Key="KeyFloat2Template">
                <Expander IsExpanded="{Binding IsExpanded, Mode=TwoWay}" Visibility="{Binding IsVisible, Converter={StaticResource bool2VisibilityConverter}}">
                    <Expander.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding DispName}"/>
                            <TextBox x:Name="box1" Grid.Column="1" TabIndex="{Binding TabIndex}" Text="{Binding Value[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RadToDegreeConverter}}"/>
                            <TextBox x:Name="box2" Grid.Column="2" Margin="10,0,0,0" TabIndex="{Binding TabIndex}" Text="{Binding Value[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RadToDegreeConverter}}"/>
                        </Grid>
                    </Expander.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="X"/>
                        <Slider Grid.Row="0" Grid.Column="1"
                                Minimum="{Binding Path=ActiveUnit.Min}"
                                Maximum="{Binding Path=ActiveUnit.Max}"
                                IsSnapToTickEnabled="{Binding Path=ActiveUnit.SnapTpTick}"
                                SmallChange="{Binding Path=ActiveUnit.SmallChange}"
                                TickFrequency="{Binding Path=ActiveUnit.Tick}"
                                Value="{Binding Path=Value[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Y"/>
                        <Slider Grid.Row="1" Grid.Column="1"
                                Minimum="{Binding Path=ActiveUnit.Min}"
                                Maximum="{Binding Path=ActiveUnit.Max}"
                                IsSnapToTickEnabled="{Binding Path=ActiveUnit.SnapTpTick}"
                                SmallChange="{Binding Path=ActiveUnit.SmallChange}"
                                TickFrequency="{Binding Path=ActiveUnit.Tick}"
                                Value="{Binding Path=Value[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </Expander>
            </DataTemplate>
            <DataTemplate x:Key="KeyFloat3Template">
                <Expander IsExpanded="{Binding IsExpanded, Mode=TwoWay}" Visibility="{Binding IsVisible, Converter={StaticResource bool2VisibilityConverter}}">
                    <Expander.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding DispName}"/>
                        </Grid>
                    </Expander.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="X"/>
                        <TextBox Grid.Row="0" Grid.Column="1" TabIndex="{Binding TabIndex}" Text="{Binding Value[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Slider Grid.Row="0" Grid.Column="2"
                                Minimum="{Binding Path=ActiveUnit.Min}"
                                Maximum="{Binding Path=ActiveUnit.Max}"
                                IsSnapToTickEnabled="{Binding Path=ActiveUnit.SnapTpTick}"
                                SmallChange="{Binding Path=ActiveUnit.SmallChange}"
                                TickFrequency="{Binding Path=ActiveUnit.Tick}"
                                Value="{Binding Path=Value[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Y"/>
                        <TextBox Grid.Row="1" Grid.Column="1" TabIndex="{Binding TabIndex}" Text="{Binding Value[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Slider Grid.Row="1" Grid.Column="2"
                                Minimum="{Binding Path=ActiveUnit.Min}"
                                Maximum="{Binding Path=ActiveUnit.Max}"
                                IsSnapToTickEnabled="{Binding Path=ActiveUnit.SnapTpTick}"
                                SmallChange="{Binding Path=ActiveUnit.SmallChange}"
                                TickFrequency="{Binding Path=ActiveUnit.Tick}"
                                Value="{Binding Path=Value[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Z"/>
                        <TextBox Grid.Row="2" Grid.Column="1" TabIndex="{Binding TabIndex}" Text="{Binding Value[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Slider Grid.Row="2" Grid.Column="2"
                                Minimum="{Binding Path=ActiveUnit.Min}"
                                Maximum="{Binding Path=ActiveUnit.Max}"
                                IsSnapToTickEnabled="{Binding Path=ActiveUnit.SnapTpTick}"
                                SmallChange="{Binding Path=ActiveUnit.SmallChange}"
                                TickFrequency="{Binding Path=ActiveUnit.Tick}"
                                Value="{Binding Path=Value[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </Expander>
            </DataTemplate>
            <DataTemplate x:Key="KeyFloat4Template">
                <Expander IsExpanded="{Binding IsExpanded, Mode=TwoWay}" Visibility="{Binding IsVisible, Converter={StaticResource bool2VisibilityConverter}}">
                    <Expander.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding DispName}"/>
                        </Grid>
                    </Expander.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="X"/>
                        <TextBox Grid.Row="0" Grid.Column="1" TabIndex="{Binding TabIndex}" Text="{Binding Value[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Slider Grid.Row="0" Grid.Column="2" 
                                Minimum="{Binding Path=ActiveUnit.Min}"
                                Maximum="{Binding Path=ActiveUnit.Max}"
                                IsSnapToTickEnabled="{Binding Path=ActiveUnit.SnapTpTick}"
                                SmallChange="{Binding Path=ActiveUnit.SmallChange}"
                                TickFrequency="{Binding Path=ActiveUnit.Tick}"
                                Value="{Binding Path=Value[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Y"/>
                        <TextBox Grid.Row="1" Grid.Column="1" TabIndex="{Binding TabIndex}" Text="{Binding Value[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Slider Grid.Row="1" Grid.Column="2" 
                                Minimum="{Binding Path=ActiveUnit.Min}"
                                Maximum="{Binding Path=ActiveUnit.Max}"
                                IsSnapToTickEnabled="{Binding Path=ActiveUnit.SnapTpTick}"
                                SmallChange="{Binding Path=ActiveUnit.SmallChange}"
                                TickFrequency="{Binding Path=ActiveUnit.Tick}"
                                Value="{Binding Path=Value[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Z"/>
                        <TextBox Grid.Row="2" Grid.Column="1" TabIndex="{Binding TabIndex}" Text="{Binding Value[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Slider Grid.Row="2" Grid.Column="2" 
                                Minimum="{Binding Path=ActiveUnit.Min}"
                                Maximum="{Binding Path=ActiveUnit.Max}"
                                IsSnapToTickEnabled="{Binding Path=ActiveUnit.SnapTpTick}"
                                SmallChange="{Binding Path=ActiveUnit.SmallChange}"
                                TickFrequency="{Binding Path=ActiveUnit.Tick}"
                                Value="{Binding Path=Value[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="W"/>
                        <TextBox Grid.Row="3" Grid.Column="1" TabIndex="{Binding TabIndex}" Text="{Binding Value[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Slider Grid.Row="3" Grid.Column="2"
                                Minimum="{Binding Path=ActiveUnit.Min}"
                                Maximum="{Binding Path=ActiveUnit.Max}"
                                IsSnapToTickEnabled="{Binding Path=ActiveUnit.SnapTpTick}"
                                SmallChange="{Binding Path=ActiveUnit.SmallChange}"
                                TickFrequency="{Binding Path=ActiveUnit.Tick}"
                                Value="{Binding Path=Value[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </Expander>
            </DataTemplate>
            <DataTemplate x:Key="KeyColorTemplate">
                <Expander IsExpanded="{Binding IsExpanded, Mode=TwoWay}" Visibility="{Binding IsVisible, Converter={StaticResource bool2VisibilityConverter}}">
                    <Expander.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding DispName}"/>
                        </Grid>
                    </Expander.Header>
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
                                <Setter Property="Background" Value="{StaticResource ForegroundBrush}"/>
                            </Style>
                        </Grid.Resources>
                        <xctk:ColorCanvas R="{Binding Path=Value[0], Mode=TwoWay}"
                                          G="{Binding Path=Value[1], Mode=TwoWay}"
                                          B="{Binding Path=Value[2], Mode=TwoWay}"
                                          A="{Binding Path=Value[3], Mode=TwoWay}"
                                          Background="{StaticResource ScrollViewerBackground}"
                                         
                                          >
                        </xctk:ColorCanvas>
                    </Grid>
                </Expander>
            </DataTemplate>




            <DataTemplate x:Key="KeyComboBoxTemplate">
                <Grid Margin="25,0,0,0" Visibility="{Binding IsVisible, Converter={StaticResource bool2VisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding DispName}"/>
                    <ComboBox Grid.Column="1" TabIndex="{Binding TabIndex}" 
                              ItemsSource="{Binding Items}"
                              DisplayMemberPath="Text"
                              SelectedValuePath="Value"
                              SelectedValue="{Binding SelectedValue, Mode=TwoWay}"
                              />
                    <!--<xctk:ColorPicker ColorMode="ColorCanvas" ShowAdvancedButton="False" Background="DarkGray" />-->
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="KeyGroupTemplate">
                <Expander Content="{Binding}"
                          IsExpanded="{Binding IsExpanded, Mode=TwoWay}" Visibility="{Binding IsVisible, Converter={StaticResource bool2VisibilityConverter}}">
                    <Expander.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding DispName}"/>
                        </Grid>
                    </Expander.Header>
                    <Expander.ContentTemplateSelector>
                        <local:ParameterTabTemplateSelector BoolTemplate="{StaticResource KeyBoolTemplate}"
                                                            ValueTemplate="{StaticResource KeyValueTemplate}"
                                                            Float2Template="{StaticResource KeyFloat2Template}"
                                                            Float3Template="{StaticResource KeyFloat3Template}"
                                                            Float4Template="{StaticResource KeyFloat4Template}"
                                                            ColorTemplate="{StaticResource KeyColorTemplate}"
                                                            StringTemplate="{StaticResource KeyStringTemplate}"
                                                            ComboBoxTemplate="{StaticResource KeyComboBoxTemplate}"
                                                            >
                            <local:ParameterTabTemplateSelector.GroupTemplate>
                                <DataTemplate>
                                    <ItemsControl ItemsSource="{Binding Value}" Margin="20,0,0,0" ItemTemplateSelector="{DynamicResource KeyTemplateSelector}">
                                    </ItemsControl>
                                </DataTemplate>
                            </local:ParameterTabTemplateSelector.GroupTemplate>
                        </local:ParameterTabTemplateSelector>
                    </Expander.ContentTemplateSelector>
                </Expander>
            </DataTemplate>
            <local:ParameterTabTemplateSelector x:Key="KeyTemplateSelector"
                                                BoolTemplate="{StaticResource KeyBoolTemplate}"
                                                ValueTemplate="{StaticResource KeyValueTemplate}"
                                                GroupTemplate="{StaticResource KeyGroupTemplate}"
                                                Float2Template="{StaticResource KeyFloat2Template}"
                                                Float3Template="{StaticResource KeyFloat3Template}"
                                                Float4Template="{StaticResource KeyFloat4Template}"
                                                ColorTemplate="{StaticResource KeyColorTemplate}"
                                                StringTemplate="{StaticResource KeyStringTemplate}"
                                                ComboBoxTemplate="{StaticResource KeyComboBoxTemplate}"
                                                />

            
        </DataTemplate.Resources>
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <DockPanel Grid.Row="0">
                <Button DockPanel.Dock="Left" Command="{Binding ExpandCommand}" ToolTip="{Binding ButtonToolTip}" Width="15"/>
                <TextBox  x:Name="SearchBox" TabIndex="0" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"/>
            </DockPanel>

            <ScrollViewer Grid.Row="1"
                          CanContentScroll="False"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Auto"
                          Tag="{Binding}"
                          x:Name="ParameterViewer"
                          >

                <StackPanel>
                    <StackPanel.ContextMenu>
                        <ContextMenu>
                            <MenuItem Style="{StaticResource KeyMenuItemExpandAll}" Command="{Binding ExpandAllCommand}"></MenuItem>
                            <MenuItem Style="{StaticResource KeyMenuItemCollapseAll}" Command="{Binding CollapseAllCommand}"></MenuItem>
                        </ContextMenu>
                    </StackPanel.ContextMenu>

                    <Expander Header="情報" IsExpanded="{Binding IsInfoGroupExpanded, Mode=TwoWay}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Text="親ID："/>
                            <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding Parameters.ParentID}"/>

                            <TextBlock Grid.Row="1" Grid.Column="0" Text="ID："/>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Parameters.ID}"/>
                            <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding Parameters.Name}"/>

                            <TextBlock Grid.Row="2" Grid.Column="0" Text="コメント："/>
                            <TextBlock Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding Parameters.Comment}"/>

                            <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Text="保存先パス："/>

                            <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Text="{Binding Path=File.Title}"/>

                        </Grid>
                    </Expander>

                    <ItemsControl ItemsSource="{Binding Parameters.Slots}"
                                  KeyboardNavigation.TabNavigation="Local"
                          
                                  ItemTemplateSelector="{StaticResource KeyTemplateSelector}">

                    </ItemsControl>
                </StackPanel>
            </ScrollViewer>
        </Grid>

    </DataTemplate>
</ResourceDictionary>