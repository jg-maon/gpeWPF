<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
    xmlns:local="clr-namespace:WpfApplication1"
    x:Class="WpfApplication1.MainWindow"       
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:prism="http://www.codeplex.com/prism"
    mc:Ignorable="d"
    Title="MainWindow" Height="350" Width="1000" 
    >
    <!--Style="{StaticResource {x:Type Window}}"-->
    <!--
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="{x:Static SystemParameters.CaptionHeight}"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>
    -->


    <i:Interaction.Triggers> 
        <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <local:CreateNewIdWindowContent/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="FileSharePane.xaml"/>
                <ResourceDictionary>

                    <local:ActiveDocumentConverter x:Key="ActiveDocumentConverter"/>
                    <local:ObjectToTypeConverter x:Key="ObjectToTypeConverter"/>
                    <avalonDock:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+N" Command="{Binding NewCommand}" />
        <KeyBinding Gesture="Ctrl+O" Command="{Binding OpenCommand}" />
    </Window.InputBindings>
    <Border BorderBrush="Gray" BorderThickness="1">
        <Grid>
            <!--
            <StackPanel Orientation="Horizontal" Margin="5"
                HorizontalAlignment="Right"
                VerticalAlignment="Top">
                <Button Content="0" Style="{DynamicResource CaptionButtonStyleKey}" />
                <Button Content="1" Style="{DynamicResource CaptionButtonStyleKey}" />
                <Button Content="2" Style="{DynamicResource CaptionButtonStyleKey}" />
                <Button Content="r" Style="{DynamicResource CaptionButtonStyleKey}" />
            </StackPanel>
            -->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Menu>
                <MenuItem Header="_File">
                    <MenuItem Header="_New" Command="{Binding NewCommand}" />
                    <MenuItem Header="_Open" Command="{Binding OpenCommand}"/>
                    <Separator/>
                    <MenuItem Header="Save" Command="{Binding ActiveDocument.SaveCommand}"/>
                    <MenuItem Header="Save As..." Command="{Binding ActiveDocument.SaveAsCommand}"/>
                    <Separator/>
                    <MenuItem Header="Close" Command="{Binding ActiveDocument.CloseCommand}"/>
                </MenuItem>
                <MenuItem Header="Tools">
                    <MenuItem Header="Properties" IsChecked="{Binding FileStats.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
                </MenuItem>
                <MenuItem Header="Layout">
                    <MenuItem Header="Load" Command="{Binding LoadLayoutCommand, ElementName=mainWindow}"/>
                    <MenuItem Header="Save" Command="{Binding SaveLayoutCommand, ElementName=mainWindow}"/>
                    <MenuItem Header="Dump to Console" Click="OnDumpToConsole"/>
                    <MenuItem Header="CreateNewId" Command="{Binding CreateCommand}" />
                </MenuItem>
            </Menu>
            <!--AnchorablesSource="{Binding Tools}" DocumentsSource="{Binding Files}"-->
            <avalonDock:DockingManager x:Name="dockManager" 
                                       AnchorablesSource="{Binding Tools}" 
                                       DocumentsSource="{Binding Files}"
                                       ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
                                       Grid.Row="1"
                                       >
                <avalonDock:DockingManager.Theme>
                    <local:DarkTheme />
                    <!--<avalonDock:ExpressionDarkTheme />-->
                </avalonDock:DockingManager.Theme>

                <avalonDock:DockingManager.LayoutItemTemplateSelector>
                    <local:PanesTemplateSelector FileShareTemplate="{StaticResource KeyFileSharePaneTemplate}">
                        <local:PanesTemplateSelector.FileViewTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding TextContent, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </local:PanesTemplateSelector.FileViewTemplate>
                        <local:PanesTemplateSelector.CategoryTreeTemplate>
                            <DataTemplate>
                                <local:CategoryTreePane />
                            </DataTemplate>
                        </local:PanesTemplateSelector.CategoryTreeTemplate>
                        <local:PanesTemplateSelector.ParameterFileTreeTemplate>
                            <DataTemplate>
                                <DataTemplate.Resources>
                                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                        <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                                        <Setter Property="local:TreeViewItemBehaviors.IsEnableDragDropMove" Value="True" />
                                        <Setter Property="local:TreeViewItemBehaviors.DragOveredBrush" Value="{StaticResource MouseOverListItem}" />
                                        <!--<Setter Property="local:TreeViewItemBehaviors.DragOveredBrush" Value="White" />-->
                                        <Setter Property="local:TreeViewItemBehaviors.NormalBackground" Value="Transparent" />
                                        
                                        <Setter Property="local:MouseDoubleClickBehavior.Command" Value="{Binding Tag.OpenCommand}"/>
                                        <Setter Property="local:MouseDoubleClickBehavior.CommandParameter" Value="{Binding}"/>
                                        
                                    </Style>
                                    <HierarchicalDataTemplate x:Key="TreeViewTemplate" 
                                                              ItemsSource="{Binding Nodes}">
                                        <TextBlock Text="{Binding Value.Label}"/>
                                    </HierarchicalDataTemplate>
                                </DataTemplate.Resources>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Button Grid.Row="0" Command="{Binding UpCommand}" Content="←"/>
                                    <TreeView Grid.Row="1" ItemsSource="{Binding RootNode.Nodes}"
                                              ItemTemplate="{StaticResource TreeViewTemplate}"
                                              AllowDrop="True"
                                              local:TreeViewItemBehaviors.IsEnableDragDropMove="True"
                                              >
                                        <i:Interaction.Behaviors>

                                            <local:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />

                                        </i:Interaction.Behaviors>
                                        <TreeView.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Add Group" Command="{Binding AddGroupCommand}"/>
                                            </ContextMenu>
                                        </TreeView.ContextMenu>
                                    </TreeView>
                                </Grid>
                            </DataTemplate>
                        </local:PanesTemplateSelector.ParameterFileTreeTemplate>
                        <local:PanesTemplateSelector.IdInfoTableTemplate>
                            <DataTemplate>
                                <DataGrid ItemsSource="{Binding LightSetCollection}"
                                          SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                                          SelectionUnit="FullRow">
                                    
                                </DataGrid>
                            </DataTemplate>
                        </local:PanesTemplateSelector.IdInfoTableTemplate>
                        <local:PanesTemplateSelector.ParameterTabTemplate>
                            <DataTemplate>
                                <ItemsControl ItemsSource="{Binding ParameterCollection}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Vertical"
                                                        ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                        ScrollViewer.CanContentScroll="False"
                                                        ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                            </StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplateSelector>
                                        <local:ParameterTabContentTemplateSelector>
                                            <local:ParameterTabContentTemplateSelector.BooleanTemplate>
                                                <DataTemplate>
                                                    <Expander>
                                                        <Expander.Header>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="150"/>
                                                                    <ColumnDefinition Width="100"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0" Text="{Binding Name}" />
                                                                <CheckBox Grid.Column="1" IsChecked="{Binding Object, Converter={StaticResource ObjectToTypeConverter}}" />
                                                            </Grid>
                                                        </Expander.Header>
                                                    </Expander>
                                                </DataTemplate>
                                            </local:ParameterTabContentTemplateSelector.BooleanTemplate>
                                            <local:ParameterTabContentTemplateSelector.EditableValueTemplate>
                                                <DataTemplate>
                                                    <Expander>
                                                        <Expander.Header>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="150"/>
                                                                    <ColumnDefinition Width="100"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0" Text="{Binding Name}" />
                                                                <TextBox Grid.Column="1" Text="{Binding Object}" />
                                                            </Grid>
                                                        </Expander.Header>
                                                    </Expander>
                                                </DataTemplate>
                                            </local:ParameterTabContentTemplateSelector.EditableValueTemplate>
                                            <local:ParameterTabContentTemplateSelector.ClassTemplate>
                                                <DataTemplate>
                                                    <Expander>
                                                        <Expander.Header>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="150"/>
                                                                    <ColumnDefinition Width="150"/>
                                                                    <ColumnDefinition Width="100"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0" Text="{Binding Name}" />
                                                                <TextBlock Grid.Column="1" Text="{Binding Object}" />
                                                            </Grid>
                                                        </Expander.Header>
                                                    </Expander>
                                                </DataTemplate>
                                            </local:ParameterTabContentTemplateSelector.ClassTemplate>
                                        </local:ParameterTabContentTemplateSelector>
                                    </ItemsControl.ItemTemplateSelector>
                                </ItemsControl>
                            </DataTemplate>
                        </local:PanesTemplateSelector.ParameterTabTemplate>
                        <local:PanesTemplateSelector.FileStatsViewTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="{Binding FileSize}"/>
                                    <TextBlock Text="{Binding LastModified}"/>
                                    <TextBox Text="test"/>
                                </StackPanel>
                            </DataTemplate>
                        </local:PanesTemplateSelector.FileStatsViewTemplate>
                    </local:PanesTemplateSelector>
                </avalonDock:DockingManager.LayoutItemTemplateSelector>

                <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                    <local:PanesStyleSelector>
                        <local:PanesStyleSelector.ToolStyle>
                            <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
                                <Setter Property="Title" Value="{Binding Model.Title}"/>
                                <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                                <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                                <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                            </Style>
                        </local:PanesStyleSelector.ToolStyle>
                        <local:PanesStyleSelector.FileStyle>
                            <Style TargetType="{x:Type avalonDock:LayoutItem}">
                                <Setter Property="Title" Value="{Binding Model.Title}"/>
                                <Setter Property="ToolTip" Value="{Binding Model.FilePath}"/>
                                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                                <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                            </Style>
                        </local:PanesStyleSelector.FileStyle>
                    </local:PanesStyleSelector>
                </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                <avalonDock:DockingManager.LayoutUpdateStrategy>
                    <local:LayoutInitializer/>
                </avalonDock:DockingManager.LayoutUpdateStrategy>

                <avalonDock:LayoutRoot>
                    <avalonDock:LayoutPanel Orientation="Horizontal">
                        <avalonDock:LayoutDocumentPane DockWidth="1" />
                        <avalonDock:LayoutAnchorablePaneGroup Orientation="Horizontal">
                            <avalonDock:LayoutAnchorablePane DockWidth="200">
                                <avalonDock:LayoutAnchorable Title="ababa" />
                                <avalonDock:LayoutAnchorable Title="ab" />
                            </avalonDock:LayoutAnchorablePane>
                            <avalonDock:LayoutAnchorablePane DockWidth="300">
                                <avalonDock:LayoutAnchorable Title="ibibi" />
                                <avalonDock:LayoutAnchorable Title="uehh" />
                            </avalonDock:LayoutAnchorablePane>
                            <avalonDock:LayoutAnchorablePane DockWidth="300">
                                <avalonDock:LayoutAnchorable Title="23233" />
                                <avalonDock:LayoutAnchorable Title="3333" />
                            </avalonDock:LayoutAnchorablePane>
                        </avalonDock:LayoutAnchorablePaneGroup>
                        <!--<avalonDock:LayoutDocumentPaneGroup Orientation="Horizontal">
                            <avalonDock:LayoutDocumentPane DockWidth="300">
                            </avalonDock:LayoutDocumentPane>
                            <local:LayoutDocumentPaneEx Name="CategoryTreePane"/>
                            <avalonDock:LayoutDocumentPane>
                                <avalonDock:LayoutDocument Title="Doc1">
                                    <StackPanel>
                                        <TextBox Name="LeftValue"/>
                                        <TextBlock Text="+" HorizontalAlignment="Center"/>
                                        <TextBox Name="RightValue" />
                                        <Button Content="="/>
                                        <TextBox IsReadOnly="True" Name="AnswerBox"/>
                                    </StackPanel>
                                </avalonDock:LayoutDocument>
                                <avalonDock:LayoutDocument Title="Doc2">
                                    <TextBox/>
                                </avalonDock:LayoutDocument>
                            </avalonDock:LayoutDocumentPane>
                            <avalonDock:LayoutDocumentPane>
                                <avalonDock:LayoutDocument Title="Doc3">
                                    <TreeView>
                                        <TreeViewItem Header="s36">
                                            <TreeViewItem>
                                                <TreeViewItem.Header>
                                                    <CheckBox Content="00__0000.gparamxml" />
                                                </TreeViewItem.Header>
                                            </TreeViewItem>
                                        </TreeViewItem>
                                        <TreeViewItem>
                                            <TreeViewItem.Header>
                                                <CheckBox Content="tree" />
                                            </TreeViewItem.Header>
                                        </TreeViewItem>
                                    </TreeView>

                                </avalonDock:LayoutDocument>
                            </avalonDock:LayoutDocumentPane>
                        </avalonDock:LayoutDocumentPaneGroup>-->
                    </avalonDock:LayoutPanel>
                    <avalonDock:LayoutRoot.LeftSide>
                        <avalonDock:LayoutAnchorSide>
                            <avalonDock:LayoutAnchorGroup>
                                <avalonDock:LayoutAnchorable Title="Autohidden Content">
                                    <TextBox/>
                                </avalonDock:LayoutAnchorable>
                            </avalonDock:LayoutAnchorGroup>
                        </avalonDock:LayoutAnchorSide>
                    </avalonDock:LayoutRoot.LeftSide>
                </avalonDock:LayoutRoot>
            </avalonDock:DockingManager>

        </Grid>
    </Border>
</Window>
